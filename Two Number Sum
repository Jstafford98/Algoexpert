/**
* This solution is O(log n) and attempts to find the solution by working from the outer values inward. 
*/

import java.util.Arrays ;

class Program{
	public static int[] twoNumberSum(int[] array,int targetSum){
		Arrays.sort(array) ;
		
		int left = 0, right = array.length - 1 ;
		
    //Execute until we have checked all combinations 
		while (left < right){
    
      //Get the sum of our current numbers 
			int currentSum = array[left] + array[right] ;
			
			//Check if we found our value
      if (currentSum == targetSum){
				return new int[] {array[left],array[right]} ;
			}
			
			//This determines if we need a larger or smaller value for y to match our x
			else if (currentSum < targetSum){
				left++ ;
			} else if (currentSum > targetSum){
				right-- ;
			}
      
		}
		return new int[0] ;
	}
}
